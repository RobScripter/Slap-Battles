-- üõ° Bypass anti-cheat
loadstring(game:HttpGet('https://raw.githubusercontent.com/RobScripter/Slap-Battles/refs/heads/main/BypassAntiCheat.lua'))()

-- üì¶ Services
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local BadgeService = game:GetService("BadgeService")
local player = Players.LocalPlayer

-- üìç Constants
local PLACE_ID = game.PlaceId
local BADGE_ID = 2125950512 -- Ton badge rare
local TELEPORT_POS = CFrame.new(-1010.16229, 329.900879, 3.98652339)

-- üìå T√©l√©portation
local function teleportToZone()
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	hrp.CFrame = TELEPORT_POS
end

-- ‚úÖ V√©rifie si le joueur a le badge
local function hasBadge()
	local success, result = pcall(function()
		return BadgeService:UserHasBadgeAsync(player.UserId, BADGE_ID)
	end)
	return success and result
end

-- ‚ö° Spam le RemoteEvent sans freeze
local function spamDuplicateUntilBadge()
	while not hasBadge() do
		for i = 1, 10 do
			pcall(function()
				game.ReplicatedStorage.Duplicate:FireServer()
			end)
		end
		task.wait()
	end
end

-- üîÅ Server Hop
local function serverHop()
	local cursor = nil
	local tried = {}

	while true do
		local url = "https://games.roblox.com/v1/games/"..PLACE_ID.."/servers/Public?sortOrder=Asc&limit=100"
		if cursor then
			url = url.."&cursor="..cursor
		end

		local success, response = pcall(function()
			return game:HttpGet(url)
		end)

		if success then
			local data = HttpService:JSONDecode(response)
			for _, server in pairs(data.data) do
				if server.playing < server.maxPlayers and server.id ~= game.JobId and not tried[server.id] then
					tried[server.id] = true

					-- Queue le script pour qu'il se relance automatiquement sur le nouveau serveur
					TeleportService:QueueOnTeleport([[
						loadstring(game:HttpGet("https://raw.githubusercontent.com/RobScripter/Slap-Battles/refs/heads/main/AutoGetBob"))()
					]])

					TeleportService:TeleportToPlaceInstance(PLACE_ID, server.id, player)
					wait(2)
					return
				end
			end
			cursor = data.nextPageCursor
			if not cursor then break end
		else
			warn("Erreur HTTP pour r√©cup√©rer les serveurs.")
			break
		end
	end

	warn("Aucun serveur dispo pour hop.")
end

-- üß† SCRIPT PRINCIPAL
task.spawn(function()
	pcall(function()
		teleportToZone()
		task.wait(1)

		if hasBadge() then
			print("üéâ Tu as d√©j√† le badge.")
			return
		end

		spamDuplicateUntilBadge()

		if hasBadge() then
			print("‚úÖ Badge obtenu, script termin√©.")
		else
			print("üîÅ Badge pas obtenu, changement de serveur...")
			serverHop()
		end
	end)
end)
